name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      JWT_SECRET: testsecret
      PORT: 3002
      DATABASE_URL: postgresql://cc-education-user:cc-education@localhost:5433/education-tests
      MONGODB_URL: mongodb://cc_user:cc_password@localhost:27017
      MONGODB_NAME: classconnect?authSource=admin
      GEMINI_API_KEY: gemini_api_key

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Start test database with Docker
        run: npm run docker:up

      - name: Wait for Postgres to be ready
        run: |
          until docker exec classconnect-education-tests pg_isready -U cc-education-user; do
            echo "Waiting for postgres..."
            sleep 2
          done
          
      - name: Wait for MongoDB to be ready
        run: |
          until docker exec my-mongo mongosh --eval "db.adminCommand('ping')"  >/dev/null 2>&1; do
            echo "Waiting for postgres..."
            sleep 2
          done

      - name: Run Prisma migrations
        run: npx prisma migrate deploy

      - name: Run tests with coverage
        run: npm run test:cov

      - name: Tear down Docker containers
        if: always()
        run: npm run docker:down

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
